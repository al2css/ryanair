$(document).ready(function() {
    WeightAndBalance.init();
});

var WeightAndBalance = {
    init: function() {
        console.log("##### INIT #####");
    }
}, WeightBalanceApp = angular.module("WeightBalanceApp", [ "ngRoute", "ngTouch", "ngSanitize", "ui.bootstrap" ]);

WeightBalanceApp.config([ "$routeProvider", function($routeProvider) {
    $routeProvider.when("/login", {
        controller: "LoginCtrl",
        templateUrl: "app/partials/_login.html",
        controllerAs: "login"
    }).when("/my-flights", {
        controller: "FlightsCtrl",
        templateUrl: "app/partials/_my-flights.html",
        controllerAs: "myFlights"
    }).when("/available-flights", {
        controller: "FlightsCtrl",
        templateUrl: "app/partials/_available-flights.html",
        controllerAs: "availableFlights"
    }).when("/flights/:id", {
        controller: "FlightCtrl",
        templateUrl: "app/partials/_flight.html",
        controllerAs: "flight"
    }).when("/home", {
        controller: "HomeCtrl",
        templateUrl: "app/partials/_home.html",
        controllerAs: "home"
    }).when("/inbox", {
        controller: "InboxCtrl",
        templateUrl: "app/partials/_inbox.html",
        controllerAs: "inbox"
    }).when("/inbox/email/:id", {
        controller: "EmailCtrl",
        templateUrl: "app/partials/_email.html",
        controllerAs: "email"
    }).when("/notifications", {
        controller: "NotificationsCtrl",
        templateUrl: "app/partials/_notifications.html",
        controllerAs: "notifications"
    }).otherwise({
        redirectTo: "/login"
    });
} ]), WeightBalanceApp.controller("HomeCtrl", [ "$scope", "$location", function($scope, $location) {
    function init() {}
    this.title = "Home", console.log(this), init(), $scope.getClass = function(path) {
        return $location.path().substr(0, path.length) == path ? "current" : "";
    };
} ]), WeightBalanceApp.controller("LoginCtrl", [ "$scope", "$location", function($scope, $location) {
    this.title = "Login", this.user = "", console.log(this), $scope.changeView = function(view) {
        $location.path(view);
    }, $scope.logIn = function(user) {
        $scope.changeView("alecsdulgheru" === user.username ? "my-flights" : "available-flights");
    };
} ]), WeightBalanceApp.controller("FlightCtrl", [ "$scope", "$location", "$routeParams", "FlightFactory", function($scope, $location, $routeParams, FlightFactory) {
    this.title = "This flight page", this.reqFlight = {}, console.log(" this: ", this);
    var getFlight = FlightFactory.getFlight($routeParams);
    getFlight && getFlight.then(angular.bind(this, function(response) {
        FlightFactory.reqFlight = response, this.reqFlight = FlightFactory.reqFlight;
    }));
} ]), WeightBalanceApp.controller("FlightsCtrl", [ "$scope", "$location", "FlightsFactory", function($scope, $location, FlightsFactory) {
    this.title = "Flights page!", this.flights = {}, console.log(" this: ", this), FlightsFactory.getFlights().then(angular.bind(this, function() {
        this.flights = FlightsFactory.flights;
    })), $scope.goToFlight = function(id) {
        FlightsFactory.goToFlight(id);
    }, $scope.addToMyFlights = function(obj, index, type) {
        var myFlight = obj, flightParent = type;
        FlightsFactory.addToMyFlights(myFlight, index, flightParent);
    }, $scope.getClass = function(path) {
        return $location.path().substr(0, path.length) == path ? "current" : "";
    };
} ]), WeightBalanceApp.controller("InboxCtrl", [ "$scope", "$location", "InboxFactory", function($scope, $location) {
    this.title = "Inbox", this.messages = {}, console.log(this), $scope.getClass = function(path) {
        return $location.path().substr(0, path.length) == path ? "current" : "";
    };
} ]), WeightBalanceApp.controller("EmailCtrl", [ "$scope", "$location", "InboxFactory", function($scope, $location) {
    this.title = "Email read", this.email = {}, console.log(this), $scope.getClass = function(path) {
        return $location.path().substr(0, path.length) == path ? "current" : "";
    };
} ]), WeightBalanceApp.controller("NotificationsCtrl", [ "$scope", "$location", function($scope, $location) {
    this.title = "Notifications", this.notifications = {}, console.log(this), $scope.getClass = function(path) {
        return $location.path().substr(0, path.length) == path ? "current" : "";
    };
} ]), angular.module("WeightBalanceApp").directive("inbox", [ "InboxFactory", function(InboxFactory) {
    "use strict";
    return {
        restrict: "EA",
        replace: !0,
        scope: !0,
        templateUrl: "app/directives/inbox.tmpl.html",
        controllerAs: "viewInbox",
        controller: function() {
            this.inboxMessages = {}, InboxFactory.getMessages().then(angular.bind(this, function() {
                this.inboxMessages = InboxFactory.messages;
            })), console.warn("this.inboxMessages InboxDirective: ", this), this.goToMessage = function(id) {
                InboxFactory.goToMessage(id);
            }, this.deleteMessage = function(id, index) {
                InboxFactory.deleteMessage(id, index);
            };
        },
        link: function() {}
    };
} ]), angular.module("WeightBalanceApp").directive("email", [ "$timeout", "EmailFactory", "$routeParams", function($timeout, EmailFactory, $routeParams) {
    "use strict";
    return {
        restrict: "E",
        replace: !0,
        scope: !0,
        templateUrl: "app/directives/email.tmpl.html",
        controllerAs: "email",
        controller: function() {
            this.message = {}, this.reply = function(message) {
                EmailFactory.reply(message);
            };
            var getmessage = EmailFactory.getMessage($routeParams);
            getmessage && getmessage.then(angular.bind(this, function(response) {
                EmailFactory.message = response, this.message = EmailFactory.message;
            })), console.warn("Email directive / Page: ", this);
        },
        link: function(scope, element) {
            var textarea = element.find(".email__response-text")[0];
            scope.$watch("reply", function(newVal, oldVal) {
                newVal !== oldVal && newVal && $timeout(function() {
                    textarea.focus();
                }, 0);
            });
        }
    };
} ]), angular.module("WeightBalanceApp").directive("roadmap", [ "FlightsFactory", function(FlightsFactory) {
    "use strict";
    return {
        restrict: "EA",
        replace: !0,
        scope: !0,
        templateUrl: "app/directives/roadmap.tmpl.html",
        controllerAs: "roadmap",
        controller: function() {
            this.flights = {}, this.dayHours = 24, this.setHour = 0, this.setMinutes = 0, this.setAllMinutes = 0, 
            this.leftOffset = 0, console.warn("this roadmap directive: ", this), FlightsFactory.getFlights().then(angular.bind(this, function() {
                this.flights = FlightsFactory.flights;
            })), this.goToFlight = function(id) {
                FlightsFactory.goToFlight(id);
            }, this.setFlightToHour = function(timestamp) {
                var date = new Date(1e3 * timestamp), hours = date.getHours(), minutes = date.getMinutes(), onlyMinutes = (date.getSeconds(), 
                60 * hours + minutes);
                return this.setHour = hours, this.setMinutes = minutes, this.setAllMinutes = onlyMinutes, 
                this.leftOffset = parseFloat(100 * this.setAllMinutes / (60 * this.dayHours)).toFixed(5), 
                {
                    left: this.leftOffset + "%"
                };
            };
        },
        link: function() {}
    };
} ]), angular.module("WeightBalanceApp").directive("timespan", function() {
    "use strict";
    return {
        restrict: "EA",
        replace: !0,
        scope: !0,
        templateUrl: "app/directives/timespan.tmpl.html",
        controllerAs: "timespan",
        controller: function() {
            this.hours = 24, this.date = new Date(), this.dayOfWeek = this.date.getDay(), this.currentHour = this.date.getHours(), 
            this.timespanWidth = parseFloat(100 / this.hours).toFixed(5), console.warn("timespan directive : ", this);
        },
        link: function() {}
    };
}), angular.module("WeightBalanceApp").directive("nrmess", [ "InboxFactory", function(InboxFactory) {
    "use strict";
    return {
        restrict: "EA",
        replace: !0,
        scope: !0,
        templateUrl: "app/directives/nrmessages.tmpl.html",
        controllerAs: "nrmessages",
        controller: function() {
            this.unreadMessages = {}, InboxFactory.getUnreadMessages().then(angular.bind(this, function() {
                angular.forEach(InboxFactory.unreadMessages, function(value, key) {
                    angular.isUndefined(InboxFactory.unreadMessages[key].unread) || InboxFactory.unreadMessages[key].unread || InboxFactory.unreadMessages.splice(key, 1);
                }), this.unreadMessages = InboxFactory.unreadMessages;
            })), console.warn("this.unreadMessages Nr: ", this);
        },
        link: function() {}
    };
} ]), angular.module("WeightBalanceApp").directive("nrnotif", [ "InboxFactory", function(InboxFactory) {
    "use strict";
    return {
        restrict: "EA",
        replace: !0,
        scope: !0,
        templateUrl: "app/directives/nrnotif.tmpl.html",
        controllerAs: "nrnotif",
        controller: function() {
            this.notifications = {}, InboxFactory.getNotifications().then(angular.bind(this, function() {
                this.notifications = InboxFactory.notifications;
            })), console.warn("this.nrnotif Nr : ", this);
        },
        link: function() {}
    };
} ]), angular.module("WeightBalanceApp").directive("notification", [ "InboxFactory", function(InboxFactory) {
    "use strict";
    return {
        restrict: "EA",
        replace: !0,
        scope: !0,
        templateUrl: "app/directives/notification.tpl.html",
        controllerAs: "notificationPage",
        controller: function() {
            this.notification = {}, InboxFactory.getNotifications().then(angular.bind(this, function() {
                this.notification = InboxFactory.notifications;
            })), console.warn("this.notification page\n : ", this);
        },
        link: function() {}
    };
} ]), angular.module("WeightBalanceApp").filter("getArrayFilter", function() {
    "use strict";
    return function(input, total, preselected_length) {
        total = parseInt("number" == typeof preselected_length ? preselected_length : total);
        for (var i = 0; total > i; i++) input.push(i);
        return input;
    };
}), angular.module("WeightBalanceApp").factory("InboxFactory", [ "$q", "$http", "$location", function($q, $http, $location) {
    "use strict";
    var exports = {};
    return exports.messages = {}, exports.unreadMessages = {}, exports.notifications = {}, 
    exports.goToMessage = function(id) {
        angular.isNumber(id) && $location.path("inbox/email/" + id);
    }, exports.deleteMessage = function(id, index) {
        this.messages.splice(index, 1), console.log("mess nr:  ", exports.messages.length);
    }, exports.getMessages = function() {
        var deferred = $q.defer();
        return $http.get("app/json/emails.json").success(function(data) {
            exports.messages = data, deferred.resolve(data);
        }).error(function(data) {
            deferred.reject(data);
        });
        return deferred.promise;
    }, exports.getUnreadMessages = function() {
        var deferred = $q.defer();
        return $http.get("app/json/emails.json").success(function(data) {
            exports.unreadMessages = data, deferred.resolve(data);
        }).error(function(data) {
            deferred.reject(data);
        });
        return deferred.promise;
    }, exports.getNotifications = function() {
        var deferred = $q.defer();
        return $http.get("app/json/notifications.json").success(function(data) {
            exports.notifications = data, deferred.resolve(data);
        }).error(function(data) {
            deferred.reject(data);
        });
        return deferred.promise;
    }, exports.getNrMessages = function() {
        return exports.messages.length;
    }, exports;
} ]), angular.module("WeightBalanceApp").factory("EmailFactory", [ "$q", "$http", "$routeParams", function($q, $http) {
    "use strict";
    var exports = {};
    return exports.messages = {}, exports.reply = function(message) {
        message && alert("Reply content: " + message);
    }, exports.getMessage = function(params) {
        if (params.id) {
            var deferred = $q.defer();
            return $http.get("app/json/message/" + params.id + ".json").success(function(data) {
                deferred.resolve(data);
            }).error(function(data) {
                deferred.reject(data);
            }), deferred.promise;
        }
    }, exports;
} ]), angular.module("WeightBalanceApp").factory("FlightsFactory", [ "$q", "$http", "$routeParams", "$location", function($q, $http, $routeParams, $location) {
    "use strict";
    var exports = {};
    return exports.flights = {}, exports.changeView = function(view) {
        $location.path(view);
    }, exports.goToFlight = function(id) {
        angular.isNumber(id) && exports.changeView("flights/" + id);
    }, exports.addToMyFlights = function(obj, index, parent) {
        if (!angular.isUndefined(obj.id) && angular.isNumber(obj.id)) {
            var myDate = exports.getDate(obj.date), todayDate = exports.getDate(exports.flights.date), isNr = angular.isNumber(myDate) && angular.isNumber(todayDate);
            if (!isNr || myDate !== todayDate) return alert("This flight is on " + new Date(1e3 * obj.date) + ", and today is " + new Date(1e3 * exports.flights.date) + "!"), 
            !1;
            exports.flights.assigned_flights.push(obj), exports.removeFlight(index, parent);
        }
    }, exports.getDate = function(timestamp) {
        var date = new Date(1e3 * timestamp), dayOfMonth = date.getDate();
        return dayOfMonth;
    }, exports.removeFlight = function(index, removeFrom) {
        removeFrom.splice(index, 1);
    }, exports.getFlights = function() {
        var deferred = $q.defer();
        return $http.get("app/json/flights.json").success(function(data) {
            exports.flights = data, deferred.resolve(data);
        }).error(function(data) {
            deferred.reject(data);
        });
        return deferred.promise;
    }, exports;
} ]), angular.module("WeightBalanceApp").factory("FlightFactory", [ "$q", "$http", "$routeParams", "$location", function($q, $http, $routeParams, $location) {
    "use strict";
    var exports = {};
    return exports.flight = {}, exports.changeView = function(view) {
        $location.path(view);
    }, exports.getFlight = function(params) {
        if (params.id) {
            var deferred = $q.defer();
            return $http.get("app/json/flight/flightID" + params.id + ".json").success(function(data) {
                deferred.resolve(data);
            }).error(function(data) {
                deferred.reject(data);
            }), deferred.promise;
        }
    }, exports;
} ]);
//# sourceMappingURL=global.min.map